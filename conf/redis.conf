# include /path/to/local.conf
# include /path/to/other.conf

################################## MODULES #####################################

# loadmodule /path/to/my_module.so
# loadmodule /path/to/other_module.so

################################## NETWORK #####################################

bind 0.0.0.0

protected-mode yes

port 6379

# in order to get the desired effect.
tcp-backlog 511

timeout 0

tcp-keepalive 300

#
# tls-cert-file redis.crt
# tls-key-file redis.key
#
#
# tls-client-cert-file client.crt
# tls-client-key-file client.key
#
# tls-client-key-file-pass secret

# tls-dh-params-file redis.dh

# tls-ca-cert-file ca.crt
# tls-ca-cert-dir /etc/ssl/certs

# tls-auth-clients no
# tls-auth-clients optional
# tls-replication yes

# tls-cluster yes

# tls-protocols "TLSv1.2 TLSv1.3"

# tls-ciphers DEFAULT:!MEDIUM

# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256

# tls-prefer-server-ciphers yes

# tls-session-caching no

# tls-session-cache-size 5000

# tls-session-cache-timeout 60

################################# GENERAL #####################################

daemonize no

#
# The default is "no". To run under upstart/systemd, you can simply uncomment
# the line below:
#
# supervised auto
# Note that on modern Linux systems "/run/redis.pid" is more conforming
# and should be used instead.
pidfile /var/run/redis_6379.pid
# warning (only very important / critical messages are logged)
loglevel notice
logfile ""
# syslog-enabled no

# crash-log-enabled no


# crash-memcheck-enabled no

databases 16

always-show-logo no

set-proc-title yes

proc-title-template "{title} {listen-addr} {server-mode}"

################################ SNAPSHOTTING  ################################

#
save 3600 1
save 300 100
save 60 10000

stop-writes-on-bgsave-error yes

rdbcompression yes

rdbchecksum yes

dbfilename dump.rdb

# Remove RDB files used by replication in instances without persistence
# enabled. By default this option is disabled, however there are environments
# where for regulations or other security concerns, RDB files persisted on
# disk by masters in order to feed replicas, or stored on disk by replicas
rdb-del-sync-files no

dir /data/

################################# REPLICATION #################################
# replicaof <masterip> <masterport>
# masterauth <master-password>
#
# masteruser <username>
replica-serve-stale-data yes
replica-read-only yes

repl-diskless-sync no

repl-diskless-sync-delay 5
repl-diskless-load disabled


# repl-ping-replica-period 10


# repl-backlog-size 1mb


# repl-backlog-ttl 3600


# By default the priority is 100.
replica-priority 100


# replica-announced yes


# min-replicas-to-write 3
# min-replicas-max-lag 10
#

# min-replicas-max-lag is set to 10.

#
# The listed IP address and port normally reported by a replica is
# obtained in the following way:
#
#   IP: The address is auto detected by checking the peer address
#                           disabled command. Note that this form is not
#                           allowed as negative like -DEBUG|SEGFAULT, but
#                           only additive starting with "+".
#  allcommands  Alias for +@all. Note that it implies the ability to execute
#               all the future commands loaded via the modules system.
#  nocommands   Alias for -@all.
#  ~<pattern>   Add a pattern of keys that can be mentioned as part of
#               commands. For instance ~* allows all the keys. The pattern
#               is a glob-style pattern like the one of KEYS.
#               It is possible to specify multiple patterns.
#  allkeys      Alias for ~*
#  resetkeys    Flush the list of allowed keys patterns.
#  &<pattern>   Add a glob-style pattern of Pub/Sub channels that can be
#               accessed by the user. It is possible to specify multiple channel
#               patterns.
#  allchannels  Alias for &*
#  resetchannels            Flush the list of allowed channel patterns.
#  ><password>  Add this password to the list of valid password for the user.
#               For example >mypass will add "mypass" to the list.
#               This directive clears the "nopass" flag (see later).
#  <<password>  Remove this password from the list of valid passwords.
#  nopass       All the set passwords of the user are removed, and the user
#               is flagged as requiring no password: it means that every
#               password will work against this user. If this directive is
#               used for the default user, every new connection will be
#               immediately authenticated with the default user without
#               any explicit AUTH command required. Note that the "resetpass"
#               directive will clear this condition.
#  resetpass    Flush the list of allowed passwords. Moreover removes the
#               "nopass" status. After "resetpass" the user has no associated
#               passwords and there is no way to authenticate without adding
#               some password (or setting it as "nopass" later).
#  reset        Performs the following actions: resetpass, resetkeys, off,
#               -@all. The user returns to the same state it has immediately
#               after its creation.
#
# ACL rules can be specified in any order: for instance you can start with
# passwords, then flags, or key patterns. However note that the additive
# and subtractive rules will CHANGE MEANING depending on the ordering.
# For instance see the following example:
#
#   user alice on +@all -DEBUG ~* >somepassword
#
# This will allow "alice" to use all the commands with the exception of the
# DEBUG command, since +@all added all the commands to the set of the commands
# alice can use, and later DEBUG was removed. However if we invert the order
# of two ACL rules the result will be different:
#
#   user alice on -DEBUG +@all ~* >somepassword
#
# Now DEBUG was removed when alice had yet no commands in the set of allowed
# commands, later all the commands are added, so the user will be able to
# execute everything.
#
# Basically ACL rules are processed left-to-right.
#
# For more information about ACL configuration please refer to
# the Redis web site at https://redis.io/topics/acl

# ACL LOG

acllog-max-len 128


# aclfile /etc/redis/users.acl


requirepass peng%wenconf

# acl-pubsub-default resetchannels


# Example:
#
# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52

#
# rename-command CONFIG ""

################################### CLIENTS ####################################


# maxclients 10000

############################## MEMORY MANAGEMENT ################################


# maxmemory <bytes>


# maxmemory-policy noeviction


# maxmemory-samples 5


# maxmemory-eviction-tenacity 10


# replica-ignore-maxmemory yes


# active-expire-effort 1

############################# LAZY FREEING ####################################



lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no


lazyfree-lazy-user-del no

lazyfree-lazy-user-flush no

################################ THREADED I/O #################################



# io-threads 4

# io-threads-do-reads no

############################ KERNEL OOM CONTROL ##############################


oom-score-adj no


oom-score-adj-values 0 200 800

#################### KERNEL transparent hugepage CONTROL ######################

disable-thp yes

############################## APPEND ONLY MODE ###############################

appendonly no

appendfilename "appendonly.aof"



# appendfsync always
appendfsync everysec
# appendfsync no

no-appendfsync-on-rewrite no

auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb


aof-load-truncated yes

aof-use-rdb-preamble yes

################################ LUA SCRIPTING  ###############################

lua-time-limit 5000

################################ REDIS CLUSTER  ###############################


cluster-enabled yes


# cluster-config-file nodes-6379.conf


cluster-node-timeout 15000


# cluster-replica-validity-factor 10


# cluster-migration-barrier 1


# cluster-allow-replica-migration yes


cluster-require-full-coverage yes


# cluster-replica-no-failover no


# cluster-allow-reads-when-down no


########################## CLUSTER DOCKER/NAT support  ########################


# Example:
#
# cluster-announce-ip 10.1.1.5
# cluster-announce-tls-port 6379
# cluster-announce-port 0
# cluster-announce-bus-port 6380

################################## SLOW LOG ###################################


slowlog-log-slower-than 10000


slowlog-max-len 128

################################ LATENCY MONITOR ##############################

notify-keyspace-events ""

############################### GOPHER SERVER #################################


stream-node-max-entries 100


activerehashing yes


rdb-save-incremental-fsync yes


# lfu-log-factor 10
# lfu-decay-time 1

########################### ACTIVE DEFRAGMENTATION #######################


# Enabled active defragmentation
# activedefrag no

# Minimum amount of fragmentation waste to start active defrag
# active-defrag-ignore-bytes 100mb

# Minimum percentage of fragmentation to start active defrag
# active-defrag-threshold-lower 10

# Maximum percentage of fragmentation at which we use maximum effort
# active-defrag-threshold-upper 100

# Minimal effort for defrag in CPU percentage, to be used when the lower
# threshold is reached
# active-defrag-cycle-min 1

# Maximal effort for defrag in CPU percentage, to be used when the upper
# threshold is reached
# active-defrag-cycle-max 25

# Maximum number of set/hash/zset/list fields that will be processed from
# the main dictionary scan
# active-defrag-max-scan-fields 1000

# Jemalloc background thread for purging will be enabled by default
jemalloc-bg-thread yes


# the taskset command:
#
# Set redis server/io threads to cpu affinity 0,2,4,6:
# server_cpulist 0-7:2
#
# Set bio threads to cpu affinity 1,3:
# bio_cpulist 1,3
#
# Set aof rewrite child process to cpu affinity 8,9,10,11:
# aof_rewrite_cpulist 8-11
#
# Set bgsave child process to cpu affinity 1,10,11
# bgsave_cpulist 1,10-11


# ignore-warnings ARM64-COW-BUG